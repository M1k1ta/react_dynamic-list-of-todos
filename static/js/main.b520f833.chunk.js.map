{"version":3,"sources":["components/TodoComponent/TodoComponent.tsx","api.ts","types/FILTERS.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoComponent","React","memo","todo","isTodoModal","handleDetailsOpen","id","title","completed","className","classNames","type","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FILTERS","TodoList","todos","onChange","onClose","userId","user","map","TodoFilter","query","onQueryChange","option","onOptionChange","value","event","target","placeholder","style","pointerEvents","Loader","TodoModal","href","email","name","App","useState","setTodos","setQuery","setOption","setTodo","setIsTodoModal","useEffect","todosFromServer","visibleTodo","isClosing","visibleTodos","useMemo","filter","lowerTitle","toLowerCase","lowerQuery","trim","result","includes","active","text","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b520f833.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  isTodoModal: boolean;\n  handleDetailsOpen: (todo: Todo) => void;\n}\n\nexport const TodoComponent: FC<Props> = React.memo(({\n  todo,\n  isTodoModal,\n  handleDetailsOpen,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <tr data-cy=\"todo\">\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames({\n            'has-text-danger': !completed,\n            'has-text-success': completed,\n          })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => handleDetailsOpen(todo)}\n        >\n          <span className=\"icon\">\n            <i\n              className={classNames('far', {\n                'fa-eye': !isTodoModal,\n                'fa-eye-slash': isTodoModal,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n});\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FILTERS {\n  all = 'all',\n  completed = 'completed',\n  active = 'active',\n}\n","import React from 'react';\nimport { Todo, TodoWithUser } from '../../types/Todo';\nimport { TodoComponent } from '../TodoComponent/TodoComponent';\nimport { getUser } from '../../api';\n\ninterface Props {\n  todos: Todo[];\n  onChange: (todo: TodoWithUser | null) => void;\n  isTodoModal: boolean;\n  onClose: (isTodoModal: boolean) => void;\n}\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  todos,\n  onChange,\n  isTodoModal,\n  onClose,\n}) => {\n  const handleDetailsOpen = (todo: Todo) => {\n    onClose(true);\n    getUser(todo.userId).then(user => onChange({\n      ...todo,\n      user,\n    }));\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          return (\n            <TodoComponent\n              todo={todo}\n              key={todo.id}\n              isTodoModal={isTodoModal}\n              handleDetailsOpen={handleDetailsOpen}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n});\n","import React from 'react';\n\ninterface Props {\n  query: string,\n  onQueryChange: (query: string) => void,\n  option: string,\n  onOptionChange: (option: string) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = React.memo(({\n  query,\n  onQueryChange,\n  option,\n  onOptionChange,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={option}\n            onChange={(event) => onOptionChange(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onQueryChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onQueryChange('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n});\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { TodoWithUser } from '../../types/Todo';\n\ninterface Props {\n  todo: TodoWithUser | null;\n  onChange: (todo: TodoWithUser | null) => void;\n  onClose: (isTodoModal: false) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todo, onChange, onClose,\n}) => {\n  const handleClose = () => {\n    onClose(false);\n    onChange(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!todo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {(todo.completed)\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${todo.user.email}`}>\n                {todo.user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo, TodoWithUser } from './types/Todo';\nimport { FILTERS } from './types/FILTERS';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [option, setOption] = useState('all');\n  const [todo, setTodo] = useState<TodoWithUser | null>(null);\n  const [isTodoModal, setIsTodoModal] = useState(false);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      });\n  }, []);\n\n  const onQueryChange = (text: string) => {\n    setQuery(text);\n  };\n\n  const onOptionChange = (text: string) => {\n    setOption(text);\n  };\n\n  const onChange = (visibleTodo: TodoWithUser | null) => {\n    setTodo(visibleTodo);\n  };\n\n  const onClose = (isClosing: boolean) => {\n    setIsTodoModal(isClosing);\n  };\n\n  const visibleTodos = useMemo(() => todos.filter(({ title, completed }) => {\n    const lowerTitle = title.toLowerCase();\n    const lowerQuery = query.toLowerCase().trim();\n    const result = lowerTitle.includes(lowerQuery);\n\n    switch (option) {\n      case FILTERS.active:\n        return result && !completed;\n      case FILTERS.completed:\n        return result && completed;\n\n      default:\n        return result;\n    }\n  }), [todos, option, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={onQueryChange}\n                option={option}\n                onOptionChange={onOptionChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    onChange={onChange}\n                    isTodoModal={isTodoModal}\n                    onClose={onClose}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isTodoModal && (\n        <TodoModal\n          todo={todo}\n          onChange={onChange}\n          onClose={onClose}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}