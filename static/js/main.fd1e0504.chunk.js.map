{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoList","React","memo","todos","setTodo","isTodoModal","setIsTodoModal","handleDetailsOpen","todo","userId","user","className","map","id","title","completed","classNames","type","onClick","TodoFilter","query","setQuery","option","setOption","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","href","email","name","App","useState","setTodos","useEffect","todosFromServer","JSON","stringify","filteredTodos","filter","result","toLowerCase","includes","trim","Error","visibleTodos","useMemo","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd1e0504.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo, TodoWithUser } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ninterface Props {\n  todos: Todo[];\n  setTodo: (todo: TodoWithUser | null) => void;\n  isTodoModal: boolean;\n  setIsTodoModal: (isTodoModal: boolean) => void;\n}\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  todos,\n  setTodo,\n  isTodoModal,\n  setIsTodoModal,\n}) => {\n  const handleDetailsOpen = (todo: Todo) => {\n    setIsTodoModal(true);\n    getUser(todo.userId).then(user => setTodo({\n      ...todo,\n      user,\n    }));\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n\n          return (\n            <tr data-cy=\"todo\" key={id}>\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-danger': !completed,\n                    'has-text-success': completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleDetailsOpen(todo)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={classNames('far', {\n                        'fa-eye': !isTodoModal,\n                        'fa-eye-slash': isTodoModal,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n});\n","import React from 'react';\n\ninterface Props {\n  query: string,\n  setQuery: (query: string) => void,\n  option: string,\n  setOption: (option: string) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = React.memo(({\n  query,\n  setQuery,\n  option,\n  setOption,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={option}\n            onChange={(event) => setOption(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n});\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { TodoWithUser } from '../../types/Todo';\n\ninterface Props {\n  todo: TodoWithUser | null;\n  setTodo: (todo: TodoWithUser | null) => void;\n  setIsTodoModal: (isTodoModal: false) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todo, setTodo, setIsTodoModal,\n}) => {\n  const handleDetailsClose = () => {\n    setIsTodoModal(false);\n    setTodo(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!todo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleDetailsClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {(todo.completed)\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${todo.user.email}`}>\n                {todo.user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo, TodoWithUser } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [option, setOption] = useState('all');\n  const [todo, setTodo] = useState<TodoWithUser | null>(null);\n  const [isTodoModal, setIsTodoModal] = useState(false);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      });\n  }, [JSON.stringify(getTodos())]);\n\n  const filteredTodos = todos.filter(({ title, completed }) => {\n    const result = title.toLowerCase().includes(query.toLowerCase().trim());\n\n    switch (option) {\n      case 'all':\n        return result;\n      case 'active':\n        return result && !completed;\n      case 'completed':\n        return result && completed;\n\n      default:\n        throw new Error('');\n    }\n  });\n\n  const visibleTodos = useMemo(\n    () => filteredTodos,\n    [JSON.stringify(filteredTodos)],\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                option={option}\n                setOption={setOption}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && <Loader />}\n              <TodoList\n                todos={visibleTodos}\n                setTodo={setTodo}\n                isTodoModal={isTodoModal}\n                setIsTodoModal={setIsTodoModal}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isTodoModal && (\n        <TodoModal\n          todo={todo}\n          setTodo={setTodo}\n          setIsTodoModal={setIsTodoModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}